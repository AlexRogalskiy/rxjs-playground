@import "~normalize.css";
@import "~@blueprintjs/core/lib/css/blueprint.css";
@import "~@blueprintjs/icons/lib/css/blueprint-icons.css";

body {
	font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}

html,
body,
.target {
	margin: 0;
	height: 100%;
}

.target {
	box-sizing: border-box;
	padding: 10px;
}

.gui {
	display: flex;
	flex-direction: column;
	height: 100%;
}

.component-playground {
	display: flex;
	flex-direction: column;
	height: 100%;

	.part-visualizer {
		position: relative;
		flex: 1;
		display: flex;
		flex-direction: row;

		.part-view {
			height: 100%;
			//border: 1px black solid;
			margin-right: 10px;
		}

		.part-details {
			height: 100%;
			min-width: 0;
			flex: 1;
			margin-left: 10px;
		}
	}
}

.component-ObservableGroupsView {
	height: 100%;
	margin-right: auto;
	overflow: auto;

	svg {
		width: 100%;
		box-sizing: border-box;
		display: block;

		.part-event {
			circle {
				transition: 0.4s cy;
			}

			text {
				transition: 0.4s y;
			}
		}

		&.draggingEvent {
			.part-event {
				circle,
				text {
					transition: none;
				}
			}
		}
	}
}

.component-RecordingMarker {
	.visualMarker {
		stroke-width: 2px;
		stroke: red;
	}

	.nonVisualMarker {
		stroke-width: 5px;
	}

	&:hover {
		.visualMarker {
			stroke-width: 4px;
		}
	}
}

.component-ObservableGroupView {
	.part-groupBackground {
		fill: lighten(gray, 44%);
		stroke: gray;
	}

	&.selectedGroup {
		.part-groupBackground {
			stroke: blue;
			stroke-width: 2;
		}
	}

	.part-title {
		stroke: black;
		text-anchor: start;
	}
}

.component-ObservableView {
	.part-lifetime {
		stroke: black;
	}

	.part-start {
		stroke: black;
	}

	.part-context-menu-space {
		fill: transparent;
	}

	.part-event-temporary {
		pointer-events: none;
		fill: gray;
		stroke: black;
	}

	.part-event {
		circle.large,
		circle.mutable:hover {
			stroke-width: 5;
			cursor: ns-resize;
		}
	}

	.part-end {
		.part-dragHandle {
			stroke: transparent;
			fill: transparent;
		}
		line {
			stroke-width: 2px;
		}

		&.mutable:hover,
		&.selected {
			line {
				stroke-width: 4px;
			}
		}
	}
}

.component-details-pane {
	flex: 1;
	height: 100%;

	display: flex;
	flex-direction: column;

	.bp3-form-group.bp3-inline {
		margin: 0;
	}

	.part-menu {
		display: flex;
		align-content: center;
		align-items: flex-start;
		padding-top: 3px;
		padding-bottom: 0px;
	}

	.part-config {
		min-height: 0;
		min-width: 0;

		flex: 1;
	}
}

.component-config {
	height: 100%;
	display: flex;
	flex-direction: column;

	.part-recording {
		display: flex;
		flex-direction: column;
		padding-top: 3px;
		padding-bottom: 8px;

		.part-options {
			display: flex;
			align-content: center;
			align-items: flex-start;
			padding-top: 3px;
			padding-bottom: 8px;

			.part-numeric-inputs {
				margin-left: 12px;
				display: flex;
				flex-direction: row;

				& > div {
					margin-right: 12px;
				}
			}
		}

		.part-text {
			margin: 4px;
		}
	}

	.part-editor {
		min-width: 0;
		min-height: 0;

		flex: 1;
	}
}

.component-monaco-editor {
	min-height: 0;
	min-width: 0;

	padding-top: 10px;
	height: 100%;
	box-sizing: border-box;
	display: flex;

	// overflow: hidden;

	.part-editor {
		min-width: 0;
		min-height: 0;
		flex: 1;
	}
}

.component-ObservableGroupView {
	& > rect {
		cursor: ew-resize;
	}
}

.Resizer {
	background: black;
	opacity: 0.2;
	z-index: 1;
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	-moz-background-clip: padding;
	-webkit-background-clip: padding;
	background-clip: padding-box;
	max-width: 11px;
	min-width: 11px;

	&:hover {
		-webkit-transition: all 2s ease;
		transition: all 2s ease;
	}

	&.horizontal {
		height: 11px;
		margin: -5px 0;
		border-top: 5px solid rgba(255, 255, 255, 0);
		border-bottom: 5px solid rgba(255, 255, 255, 0);
		cursor: row-resize;
		width: 100%;
	}

	&.horizontal:hover {
		border-top: 5px solid rgba(0, 0, 0, 0.5);
		border-bottom: 5px solid rgba(0, 0, 0, 0.5);
	}

	&.vertical {
		width: 11px;
		margin: 0 -5px;
		border-left: 5px solid rgba(255, 255, 255, 0);
		border-right: 5px solid rgba(255, 255, 255, 0);
		cursor: col-resize;
	}

	&.vertical:hover {
		border-left: 5px solid rgba(0, 0, 0, 0.5);
		border-right: 5px solid rgba(0, 0, 0, 0.5);
	}
	&.disabled {
		cursor: not-allowed;
	}
	&.disabled:hover {
		border-color: transparent;
	}
}

.Pane.vertical {
	min-width: 0;
}
